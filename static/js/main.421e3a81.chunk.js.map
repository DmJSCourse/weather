{"version":3,"sources":["components/SearchBar/SearchBar.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","components/Display/Display.jsx","api/metaweather.js","utils/colorConverter.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["SearchBar","searchInput","setSearchInput","setWeather","action","method","className","htmlFor","type","id","placeholder","value","name","onChange","event","target","onClick","preventDefault","Header","Footer","temperature","changeTemperature","min","max","step","Display","icon","src","alt","city","getPosition","a","URL","Promise","resolved","rejected","navigator","geolocation","getCurrentPosition","position","fetch","coords","latitude","longitude","then","response","json","nearbyCities","title","cityData","parsedData","woeid","weather","consolidated_weather","toPass","getWeather","colorConverter","H","r","g","b","length","cmin","Math","cmax","delta","h","round","baseTemperatueHue","coldTemperatureHue","hotTemperatureHue","normalToColdStep","normalToHotStep","App","useState","setIcon","setTemperature","received","weather_state_abbr","the_temp","useEffect","targetHue","resultMultiplier","temperatureDisplay","document","querySelector","style","backgroundColor","changeBackgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.421e3a81.chunk.js","sourcesContent":["import './SearchBar.css';\r\n\r\nexport default function SearchBar({ searchInput, setSearchInput, setWeather }) {\r\n    function handleClick(event) {\r\n        event.preventDefault();\r\n        setWeather(searchInput);\r\n    }\r\n\r\n    return (\r\n        <form action=\"/\" method=\"get\" className=\"form\">\r\n            <label htmlFor=\"search\">\r\n               Search City By Name\r\n            </label>\r\n            <input\r\n                type='text'\r\n                id='search'\r\n                className='search'\r\n                placeholder='Enter City'\r\n                value={searchInput}\r\n                name='search'\r\n                onChange={(event) => {\r\n                    setSearchInput(event.target.value);\r\n                }}\r\n            >\r\n            </input>\r\n            <button \r\n                type=\"submit\"\r\n                className=\"search-button\"\r\n                onClick = {handleClick}\r\n            >\r\n                Search\r\n            </button>\r\n        </form>\r\n  );\r\n}\r\n","import './Header.css';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\n\r\nfunction Header({ searchInput, setSearchInput, setWeather }) {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"logo\">\r\n                <span className=\"react\">\r\n                    React\r\n                </span>\r\n                 Weather\r\n            </h1>\r\n            <SearchBar \r\n            searchInput= {searchInput}\r\n            setSearchInput = {setSearchInput}\r\n            setWeather = {setWeather}\r\n        />\r\n        </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import './Footer.css';\r\n\r\nfunction Footer({ temperature, changeTemperature }) {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <label \r\n                htmlFor=\"temperature-bar\"\r\n                className=\"temperature-label\"\r\n            >\r\n                Adjust Temperature\r\n            </label>\r\n            <input \r\n                type='range'\r\n                className='temperature-bar'\r\n                name='temperature-bar'\r\n                min='-10'\r\n                max='30'\r\n                value= {temperature}\r\n                step='1'\r\n                onChange={(event) => changeTemperature(event.target.value)}\r\n            >\r\n            </input>\r\n            <span className=\"temperature-display\">\r\n                {temperature}\r\n            </span>\r\n        </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import './Display.css';\r\n\r\nfunction Display({ icon }, temperature) {\r\n    return (\r\n        <section \r\n            className='display'\r\n            id='display'\r\n        >\r\n            <img \r\n                src= {'https://www.metaweather.com/static/img/weather/' + icon + '.svg'}\r\n                alt='Weather Icon'\r\n                className='icon'\r\n            >\r\n            </img>\r\n        </section>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n\r\n\r\n","async function getWeather(city) {\r\n    const URL = 'https://morning-earth-11799.herokuapp.com/https://www.metaweather.com/api/location/';\r\n\r\n    if (!city) {\r\n        function getPosition() {\r\n            return new Promise((resolved, rejected) => {\r\n                navigator.geolocation.getCurrentPosition(resolved, rejected);\r\n            });\r\n        }\r\n\r\n        let position = await getPosition();\r\n        let nearbyCities = await fetch(URL + 'search/?lattlong=' + position.coords.latitude + ',' + position.coords.longitude)\r\n            .then((response) => response.json());\r\n        city = await nearbyCities[0].title;\r\n    }\r\n\r\n    let cityData = await fetch(URL + 'search/?query=' + city);\r\n    let parsedData = await cityData.json();\r\n    let weather = await (await fetch(URL + parsedData[0].woeid + '/')).json();\r\n    let toPass = await weather.consolidated_weather[0];\r\n    return toPass;\r\n}\r\n\r\nexport default getWeather;\r\n","function colorConverter(H) {\r\n\r\n    let r = 0, g = 0, b = 0;\r\n    if (H.length === 4) {\r\n      r = \"0x\" + H[1] + H[1];\r\n      g = \"0x\" + H[2] + H[2];\r\n      b = \"0x\" + H[3] + H[3];\r\n    } else if (H.length === 7) {\r\n      r = \"0x\" + H[1] + H[2];\r\n      g = \"0x\" + H[3] + H[4];\r\n      b = \"0x\" + H[5] + H[6];\r\n    }\r\n\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n    let cmin = Math.min(r,g,b),\r\n        cmax = Math.max(r,g,b),\r\n        delta = cmax - cmin,\r\n        h = 0;\r\n        // s = 0,\r\n        // l = 0;\r\n\r\n    if (delta === 0)\r\n      h = 0;\r\n    else if (cmax === r)\r\n      h = ((g - b) / delta) % 6;\r\n    else if (cmax === g)\r\n      h = (b - r) / delta + 2;\r\n    else\r\n      h = (r - g) / delta + 4;\r\n  \r\n    h = Math.round(h * 60);\r\n  \r\n    if (h < 0)\r\n      h += 360;\r\n  \r\n  //   l = (cmax + cmin) / 2;\r\n  //   s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n  //  // s = +(s * 100).toFixed(1);\r\n  //   l = +(l * 100).toFixed(1);\r\n  \r\n    return h;\r\n  }\r\n\r\n  export default colorConverter;\r\n","import './App.css';\n\nimport { useState, useEffect } from 'react';\n\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport Display from '../Display/Display';\n\nimport getWeather from '../../api/metaweather';\nimport colorConverter from '../../utils/colorConverter';\n\nconst baseTemperatueHue = colorConverter('#fff700');\nconst coldTemperatureHue = colorConverter('#00ffff');\nconst hotTemperatureHue = colorConverter('#ff8c00');\nconst colorChangeBoundaries = 20;\nconst normalToColdStep = (coldTemperatureHue - baseTemperatueHue) / colorChangeBoundaries;\nconst normalToHotStep = (hotTemperatureHue - baseTemperatueHue) / colorChangeBoundaries;\n\nconst changeBackgroundColor = (temperature) => {\n  const temperatureDisplay = document.querySelector('.display');\n  let differenceWithBase = 0;\n  let targetHue = 0;\n  let resultMultiplier; \n\n  switch (true) {\n    case (temperature === 10):\n      break;\n    case (temperature < 10):\n      differenceWithBase = 10 - temperature;\n      resultMultiplier = differenceWithBase * normalToColdStep;\n      break;\n    case (temperature > 10):\n      differenceWithBase = temperature - 10;\n      resultMultiplier = differenceWithBase * normalToHotStep;\n      break;\n    default:\n      break;\n  }\n\n  targetHue = baseTemperatueHue + resultMultiplier;\n  temperatureDisplay.style.backgroundColor = `hsl(` + targetHue  + `, 100%, 50%)`;\n}\n\nfunction App() {\n  let [icon, setIcon] = useState('c');\n  let [temperature, setTemperature] = useState(10);\n  let [searchInput, setSearchInput] = useState('');\n\n  async function setWeather (city) {\n    let received = await getWeather(city);\n    setIcon(received.weather_state_abbr);\n    setTemperature(Math.round(received.the_temp));\n  }\n\n  useEffect(() => {\n    setWeather();\n  }, []);\n\n  useEffect(() => {\n    changeBackgroundColor(temperature);\n  })\n\nreturn (\n  <div className='app'>\n      <Header\n        searchInput = {searchInput}\n        setSearchInput = {setSearchInput}\n        setWeather = {setWeather}\n      />\n      <Display \n        icon={icon}\n        temperature = { temperature }\n      />\n      <Footer\n        temperature = { temperature }\n        changeTemperature = { setTemperature }\n      />\n  </div>\n)};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}